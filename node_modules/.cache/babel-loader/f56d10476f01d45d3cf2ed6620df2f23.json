{"ast":null,"code":"var _jsxFileName = \"C:\\\\SummerInternship\\\\React\\\\covid-19-tracker\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport \"./App.css\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  });\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode); //For WOrldwide: https://disease.sh/v3/covid-19/all\n    //API Call : https://disease.sh/v3/covid-19/countries\n\n    const url = countryCode === \"worlwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"COVID-19 Tracker\"), /*#__PURE__*/React.createElement(FormControl, {\n    class: \"app__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    onChange: onCountryChange,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Coronavirus Cases\",\n    total: countryInfo.cases,\n    cases: countryInfo.todayCases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Recovered\",\n    total: countryInfo.reovered,\n    cases: countryInfo.todayRecovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Deaths\",\n    total: countryInfo.deaths,\n    cases: countryInfo.todayDeaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Card, {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Live casee by country\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Worldwide new Cases\"), /*#__PURE__*/React.createElement(LineGraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/SummerInternship/React/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","sortData","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","cases","todayCases","reovered","todayRecovered","deaths","todayDeaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n  \n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\"\nimport { sortData } from \"./util\"\nimport LineGraph from \"./LineGraph\"\nimport \"leaflet/dist/leaflet\"\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([])\n\n  useEffect( () => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then( response => response.json())\n    .then(data => {\n      setCountryInfo(data)\n    })\n  })\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          const sortedData = sortData(data)\n          setTableData(sortedData)\n          setCountries(countries);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    //For WOrldwide: https://disease.sh/v3/covid-19/all\n    //API Call : https://disease.sh/v3/covid-19/countries\n\n    const url =\n      countryCode === \"worlwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n        await fetch(url)\n        .then(response => response.json())\n        .then(data =>{\n          setCountry(countryCode)\n          setCountryInfo(data)\n        })\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl class=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox title=\"Coronavirus Cases\" total={countryInfo.cases} cases={countryInfo.todayCases} />\n          <InfoBox title=\"Recovered\" total={countryInfo.reovered} cases={countryInfo.todayRecovered} />\n          <InfoBox title=\"Deaths\" total={countryInfo.deaths} cases={countryInfo.todayDeaths} />\n        </div>\n\n        <div>\n          <Map />\n        </div>\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live casee by country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new Cases</h3>\n          <LineGraph />\n        </CardContent>\n        \n        {/* Graph */}\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}