{"ast":null,"code":"var _jsxFileName = \"C:\\\\SummerInternship\\\\React\\\\covid-19-tracker\\\\src\\\\LineGraph.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  }\n};\n\nfunction LineGraph() {\n  const [data, setData] = useState({});\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {});\n  }, []);\n\n  const buildChartData = (data, casesType = \"cases\") => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    ;\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      const chartData = buildChartData(data, 'cases');\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"I am a graph\"), /*#__PURE__*/React.createElement(Line, {\n    options: options,\n    data: {\n      datasets: [{\n        data: data\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["C:/SummerInternship/React/covid-19-tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","LineGraph","setData","fetch","then","response","json","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","datasets"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADI;AAIZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL;AADD,GAJE;AASZC,EAAAA,mBAAmB,EAAE,KATT;AAUZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,OADA;AAENC,IAAAA,SAAS,EAAE,KAFL;AAGNC,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAE,UAAUC,WAAV,EAAuBC,IAAvB,EAA4B;AAC/B,eAAOC,OAAO,CAACF,WAAW,CAACG,KAAb,CAAP,CAA2BC,MAA3B,CAAkC,MAAlC,CAAP;AACH;AAHM;AAHL;AAVE,CAAhB;;AAqBA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACJ,IAAD,EAAOK,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESP,IAAD,IAAU,CAAE,CAFpB;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAKA,QAAMU,cAAc,GAAG,CAACV,IAAD,EAAOW,SAAS,GAAG,OAAnB,KAA+B;AACpD,UAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,aAAJ;;AAEA,SAAI,IAAIC,IAAR,IAAgBd,IAAI,CAACe,KAArB,EAA4B;AAC1B,UAAIF,aAAJ,EAAmB;AACjB,cAAMG,YAAY,GAAG;AACnBC,UAAAA,CAAC,EAAEH,IADgB;AAEnBI,UAAAA,CAAC,EAAElB,IAAI,CAACW,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFR,SAArB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACD;;AACDH,MAAAA,aAAa,GAAGb,IAAI,CAACW,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;AACD;;AAAA;AACD,WAAOF,SAAP;AACD,GAfD;;AAgBA3B,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESP,IAAD,IAAU;AACd,YAAMY,SAAS,GAAGF,cAAc,CAACV,IAAD,EAAO,OAAP,CAAhC;AACAK,MAAAA,OAAO,CAACO,SAAD,CAAP;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,IAAD;AACA,IAAA,OAAO,EAAEzB,OADT;AAEC,IAAA,IAAI,EAAE;AACHiC,MAAAA,QAAQ,EAAE,CAAC;AACPpB,QAAAA,IAAI,EAACA;AADE,OAAD;AADP,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAaD;;AAED,eAAeI,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst options = {\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0, \r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data){\r\n                return numeral(tooltipItem.value).format(\"+0,0\")\r\n            },\r\n        },\r\n    },\r\n}\r\n\r\nfunction LineGraph() {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n      .then((response) => response.json())\r\n      .then((data) => {});\r\n  }, []);\r\n  const buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for(let date in data.cases) {\r\n      if (lastDataPoint) {\r\n        const newDataPoint = {\r\n          x: date,\r\n          y: data[casesType][date] - lastDataPoint,\r\n        };\r\n        chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data[casesType][date];\r\n    };\r\n    return chartData;\r\n  };\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const chartData = buildChartData(data, 'cases');\r\n        setData(chartData);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>I am a graph</h1>\r\n      <Line\r\n      options={options}\r\n       data={{\r\n          datasets: [{\r\n              data:data\r\n          }]\r\n      }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n"]},"metadata":{},"sourceType":"module"}